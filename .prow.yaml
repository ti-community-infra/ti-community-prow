presubmits:
  - name: pull-tichi-validate-prow-yaml
    decorate: true
    run_if_changed: 'configs/prow-dev/'
    branches:
      - ^master$
    spec:
      containers:
        - image: gcr.io/k8s-prow/checkconfig:v20210319-2181a9e7d7
          command:
            - /checkconfig
          args:
            - --plugin-config=configs/prow-dev/config/plugins.yaml
            - --config-path=configs/prow-dev/config/config.yaml
            - --job-config-path=configs/prow-dev/jobs
            - --warnings=validate-urls
            - --warnings=unknown-fields
            - --warnings=duplicate-job-refs
  - name: pull-tichi-validate-external-plugin-yaml
    decorate: true
    run_if_changed: 'configs/prow-dev/config/external_plugins_config.yaml'
    branches:
      - ^master$
    spec:
      containers:
        - image: ticommunityinfra/tichi-check-external-plugin-config:v1.4.1
          command:
            - check-external-plugin-config
          args:
            - --external-plugin-config-path=configs/prow-dev/config/external_plugins_config.yaml
  - name: pull-tichi-unit-test
    decorate: true
    always_run: true
    branches:
      - ^master$
    spec:
      containers:
        - image: golang:1.15
          command:
            - /bin/bash
            - -c
            - "GIT_COMMIT=${PULL_PULL_SHA} make check cover"
          env:
            - name: CODECOV_TOKEN
              valueFrom:
                secretKeyRef:
                  name: codecov-tokens
                  key: ti-community-infra-tichi-codecov-token
  - name: pull-tichi-validate-labels-yaml
    decorate: true
    run_if_changed: 'configs/prow-dev/config/labels.yaml'
    branches:
      - ^master$
    spec:
      containers:
        - image: gcr.io/k8s-prow/label_sync:v20210319-2181a9e7d7
          command:
            - /app/label_sync/app.binary
          args:
            - --config=configs/prow-dev/config/labels.yaml
            - --confirm=false
            - --only=ti-community-infra/test-dev
            - --token=/etc/github/token
          volumeMounts:
            - name: github-token
              mountPath: /etc/github
              readOnly: true
      volumes:
        - name: github-token
          secret:
            secretName: github-token
  - name: pull-tichi-test-autobump
    # Run at minute 5 past every hour from 15 through 23 on every day-of-week from Monday through Friday (At UTC+8).
    # cron: "05 7-15 * * 1-5"
    decorate: true
    always_run: true
    spec:
      containers:
        - image: gcr.io/k8s-prow/autobump:v20210319-2181a9e7d7
          command:
            - /autobump.sh
          args:
            - /etc/github/token
            # Make the bot name and email match the user data of the provided token's user.
            - "ti-chi-bot"
            - ti-community-prow-bot@tidb.io
          volumeMounts:
            - name: github-token
              mountPath: /etc/github
              readOnly: true
          env:
            # autobump.sh args
            # GitHub org containing the repo where the Prow config and component files live.
            - name: GH_ORG
              value: ti-community-infra
            # GitHub repo where the Prow config and component deployment files live.
            - name: GH_REPO
              value: tichi
            # Repo relative path of the `plank` component k8s deployment file.
            - name: PROW_CONTROLLER_MANAGER_FILE
              value: configs/prow-dev/cluster/prow_controller_manager_deployment.yaml
            # bump.sh args
            # Directory (or comma-delimited list of directories) containing k8s deployment YAMLs for Prow components.
            - name: COMPONENT_FILE_DIR
              value: configs/prow-dev/cluster
              # value: config/prow/cluster,prow/config/jobs
            # Repo relative path of the core Prow config file (config.yaml).
            - name: CONFIG_PATH
              value: configs/prow-dev/config/config.yaml
            # Repo relative path of the ProwJob config file or directory.
            # Omit this if ProwJobs are only defined in config.yaml (or are not configured at all).
            - name: JOB_CONFIG_PATH
              value: "./"
      volumes:
        - name: github-token
          secret:
            # Secret containing a GitHub user access token with `repo` scope for creating PRs.
            secretName: github-token
postsubmits:
  - name: post-tichi-deploy-prow
    run_if_changed: 'configs/prow-dev/cluster/'
    decorate: true
    branches:
      - ^master$
    max_concurrency: 1
    spec:
      containers:
        - image: google/cloud-sdk:319.0.0
          command:
            - scripts/deploy.sh
          args:
            - --confirm
            - --config=trusted
          env:
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /creds/service-account.json
          volumeMounts:
            - name: creds
              mountPath: /creds
      volumes:
        - name: creds
          secret:
            secretName: deployer-credentials
    annotations:
      description: deploys the configured version of prow by running scripts/deploy.sh
  - name: post-tichi-label-sync
    decorate: true
    run_if_changed: 'configs/prow-dev/config/labels.yaml'
    branches:
      - ^master$
    spec:
      containers:
        - image: gcr.io/k8s-prow/label_sync:v20210319-2181a9e7d7
          command:
            - /app/label_sync/app.binary
          args:
            - --config=configs/prow-dev/config/labels.yaml
            - --confirm=true
            - --only=ti-community-infra/test-dev
            - --token=/etc/github/token
          volumeMounts:
            - name: github-token
              mountPath: /etc/github
              readOnly: true
      volumes:
        - name: github-token
          secret:
            secretName: github-token
  - name: post-tichi-unit-test
    decorate: true
    branches:
      - ^master$
    spec:
      containers:
        - image: golang:1.15
          command:
            - /bin/bash
            - -c
            - "GIT_COMMIT=${PULL_PULL_SHA} make check cover"
          env:
            - name: CODECOV_TOKEN
              valueFrom:
                secretKeyRef:
                  name: codecov-tokens
                  key: ti-community-infra-tichi-codecov-token